{
  "address": "0xde6640A39c012F1C6e9474C9fddE1C45E0BDaB7e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd928046256eaf79db4d56fb3d8437b713a5b90b2c7f905213c8daa304459b87c",
  "receipt": {
    "to": null,
    "from": "0x3B4c12339A246eDfe8c6CFE084A7807BaD0E51d4",
    "contractAddress": "0xde6640A39c012F1C6e9474C9fddE1C45E0BDaB7e",
    "transactionIndex": 97,
    "gasUsed": "811211",
    "logsBloom": "0x
    "blockHash": "0x12b435bb117708d328fbd51453c61391c3ff70a72f6dbdf3540d2598c279f3ae",
    "transactionHash": "0xd928046256eaf79db4d56fb3d8437b713a5b90b2c7f905213c8daa304459b87c",
    "logs": [],
    "blockNumber": 6203003,
    "cumulativeGasUsed": "15273511",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "886a3214d64eb704091de948de995e48",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Manajit Halder\",\"details\":\"All functions are currently implemented without side effects.\",\"errors\":{\"FundMe__NotOwner()\":[{\"details\":\"This error is thorwn if withdraw function is called otherthan owner\"}]},\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"Function maintain funders list\"},\"withdraw()\":{\"details\":\"Withdraws fund from all funders and empty their fund\"}},\"title\":\"A contract for crown funding\",\"version\":1},\"userdoc\":{\"errors\":{\"FundMe__NotOwner()\":[{\"notice\":\"Checks to make sure that msg.sender is owner\"}]},\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function receives fund from anyone\"},\"withdraw()\":{\"notice\":\"Withdraw fund only by owner\"}},\"notice\":\"This contract is to demo a sample crowd funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n/**\\n * @notice Checks to make sure that msg.sender is owner\\n * @dev This error is thorwn if withdraw function is called otherthan owner\\n */\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crown funding\\n *  @author Manajit Halder\\n *  @notice This contract is to demo a sample crowd funding contract\\n *  @dev All functions are currently implemented without side effects.\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address public immutable i_owner;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {        \\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Only owner can call this function\\\");\\n        if (msg.sender != i_owner) { revert FundMe__NotOwner(); }\\n        _;\\n    }\\n\\n    /** @notice Receives fund when msg.data is empty\\n     *  @dev Called when no other function matches with contract function\\n     */\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    /** @notice Receives fund when msg.data is not empty\\n     *  @dev Called when no other function matches with contract function\\n     */\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /** @notice This function receives fund from anyone\\n     *  @dev Function maintain funders list\\n     */\\n    function fund() public payable {\\n        // Want to be able to set a minimum fund amount in USD\\n        // Send some ETH to this contract?\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Didn't send enough!\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    /** @notice Withdraw fund only by owner\\n     *  @dev Withdraws fund from all funders and empty their fund\\n     */\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the funders array\\n        funders = new address[](0);\\n\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"send failed\\\");\\n        // call \\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x7ac8d02cae6bca39d9c5b4e1327d7a0f591d8ec63055891b54ef0b6404784e82\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n/** @title A contract for price conversion using CCIP price feed usign Sepolia testnet\\n *  @author Manajit Halder\\n *  @notice This contract is to calculate price feed using CCIP\\n *  @dev This calculates price feed\\n */\\nlibrary PriceConverter {\\n    /** @notice Receives priceFeed value using CCIP functions\\n     *  @dev priceFeed value is received for conversion between ETH and USD\\n     *  @param priceFeed current price of USD in ETH with 8 decimal places\\n     *  @return value of 1 eth in USD and converts the result to Wei \\n     */\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (\\n            /*uint80 roundId*/, \\n            int256 answer,\\n            /*uint256 startedAt*/,\\n            /*uint256 updatedAt*/,\\n            /*uint80 answeredInRound*/\\n        ) = priceFeed.latestRoundData();\\n        // answer is price of ETH in USD\\n        \\n        return uint256(answer * 1e10); // \\n    }\\n\\n    /** @notice Gets current version of AggregatorV3Interface\\n     *  @dev uses Sepolia testnet's address\\n     *  @return version ofAggregatorV3Interface \\n     */\\n    function getVersion() internal view returns (uint256) {\\n        return AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306).version();\\n    }\\n\\n    /** @notice Converts ETH (Wei) to USD and returns result in ETH as wei\\n     *  @dev ethAmountInWei amount of Wei \\n     *  @param ethAmountInWei amount of Wei\\n     *  @param priceFeed instance of AggregatorV3Interface\\n     *  @return value of certain amount of USD coverted to Wei\\n     */\\n    function getConversionRate(uint256 ethAmountInWei /* ETH as WEI*/, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 weiInUSD = getPrice(priceFeed);\\n        uint256 weiAmountInUSD = (weiInUSD * ethAmountInWei) / 1e18;\\n\\n        return weiAmountInUSD;\\n    }\\n}\",\"keccak256\":\"0x09ddb34778c1c6b7bb799b412f37aa272a4d2d4b80d303e3260c2108f939eb14\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ea8380380610ea883398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d4961015f600039600081816102e6015261056b0152610d496000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a3565b61051e565b6040516100d891906107e9565b60405180910390f35b3480156100ed57600080fd5b506100f6610536565b60405161010391906107e9565b60405180910390f35b34801561011857600080fd5b50610121610543565b60405161012e9190610863565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610569565b604051610163919061088d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d4565b61058d565b6040516101a0919061088d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cc90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109ad565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040e57600080828154811061038e5761038d6109e1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061036c565b50600067ffffffffffffffff81111561042a57610429610a10565b5b6040519080825280602002602001820160405280156104585781602001602082028036833780820191505090505b506000908051906020019061046e929190610699565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049590610a70565b60006040518083038185875af1925050503d80600081146104d2576040519150601f19603f3d011682016040523d82523d6000602084013e6104d7565b606091505b505090508061051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610ad1565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d883610608565b90506000670de0b6b3a764000085836105f19190610af1565b6105fb9190610b62565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190610c20565b5050509150506402540be400816106919190610c9b565b915050919050565b828054828255906000526020600020908101928215610712579160200282015b828111156107115782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b9565b5b50905061071f9190610723565b5090565b5b8082111561073c576000816000905550600101610724565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077082610745565b9050919050565b61078081610765565b811461078b57600080fd5b50565b60008135905061079d81610777565b92915050565b6000602082840312156107b9576107b8610740565b5b60006107c78482850161078e565b91505092915050565b6000819050919050565b6107e3816107d0565b82525050565b60006020820190506107fe60008301846107da565b92915050565b6000819050919050565b600061082961082461081f84610745565b610804565b610745565b9050919050565b600061083b8261080e565b9050919050565b600061084d82610830565b9050919050565b61085d81610842565b82525050565b60006020820190506108786000830184610854565b92915050565b61088781610765565b82525050565b60006020820190506108a2600083018461087e565b92915050565b6108b1816107d0565b81146108bc57600080fd5b50565b6000813590506108ce816108a8565b92915050565b6000602082840312156108ea576108e9610740565b5b60006108f8848285016108bf565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610948601383610901565b915061095382610912565b602082019050919050565b600060208201905081810360008301526109778161093b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b8826107d0565b91506109c3836107d0565b92508282019050808211156109db576109da61097e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5a600083610a3f565b9150610a6582610a4a565b600082019050919050565b6000610a7b82610a4d565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abb600b83610901565b9150610ac682610a85565b602082019050919050565b60006020820190508181036000830152610aea81610aae565b9050919050565b6000610afc826107d0565b9150610b07836107d0565b9250828202610b15816107d0565b91508282048414831517610b2c57610b2b61097e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6d826107d0565b9150610b78836107d0565b925082610b8857610b87610b33565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb281610b93565b8114610bbd57600080fd5b50565b600081519050610bcf81610ba9565b92915050565b6000819050919050565b610be881610bd5565b8114610bf357600080fd5b50565b600081519050610c0581610bdf565b92915050565b600081519050610c1a816108a8565b92915050565b600080600080600060a08688031215610c3c57610c3b610740565b5b6000610c4a88828901610bc0565b9550506020610c5b88828901610bf6565b9450506040610c6c88828901610c0b565b9350506060610c7d88828901610c0b565b9250506080610c8e88828901610bc0565b9150509295509295909350565b6000610ca682610bd5565b9150610cb183610bd5565b9250828202610cbf81610bd5565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf757610cf661097e565b5b8282058414831517610d0c57610d0b61097e565b5b509291505056fea2646970667358221220f4514966c10a67dc4103ec58d48227746ec4b70df1cbe750d6cb0ff47d9dc06264736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a3565b61051e565b6040516100d891906107e9565b60405180910390f35b3480156100ed57600080fd5b506100f6610536565b60405161010391906107e9565b60405180910390f35b34801561011857600080fd5b50610121610543565b60405161012e9190610863565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610569565b604051610163919061088d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d4565b61058d565b6040516101a0919061088d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cc90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109ad565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040e57600080828154811061038e5761038d6109e1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061036c565b50600067ffffffffffffffff81111561042a57610429610a10565b5b6040519080825280602002602001820160405280156104585781602001602082028036833780820191505090505b506000908051906020019061046e929190610699565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049590610a70565b60006040518083038185875af1925050503d80600081146104d2576040519150601f19603f3d011682016040523d82523d6000602084013e6104d7565b606091505b505090508061051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610ad1565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d883610608565b90506000670de0b6b3a764000085836105f19190610af1565b6105fb9190610b62565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190610c20565b5050509150506402540be400816106919190610c9b565b915050919050565b828054828255906000526020600020908101928215610712579160200282015b828111156107115782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b9565b5b50905061071f9190610723565b5090565b5b8082111561073c576000816000905550600101610724565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077082610745565b9050919050565b61078081610765565b811461078b57600080fd5b50565b60008135905061079d81610777565b92915050565b6000602082840312156107b9576107b8610740565b5b60006107c78482850161078e565b91505092915050565b6000819050919050565b6107e3816107d0565b82525050565b60006020820190506107fe60008301846107da565b92915050565b6000819050919050565b600061082961082461081f84610745565b610804565b610745565b9050919050565b600061083b8261080e565b9050919050565b600061084d82610830565b9050919050565b61085d81610842565b82525050565b60006020820190506108786000830184610854565b92915050565b61088781610765565b82525050565b60006020820190506108a2600083018461087e565b92915050565b6108b1816107d0565b81146108bc57600080fd5b50565b6000813590506108ce816108a8565b92915050565b6000602082840312156108ea576108e9610740565b5b60006108f8848285016108bf565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610948601383610901565b915061095382610912565b602082019050919050565b600060208201905081810360008301526109778161093b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b8826107d0565b91506109c3836107d0565b92508282019050808211156109db576109da61097e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5a600083610a3f565b9150610a6582610a4a565b600082019050919050565b6000610a7b82610a4d565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abb600b83610901565b9150610ac682610a85565b602082019050919050565b60006020820190508181036000830152610aea81610aae565b9050919050565b6000610afc826107d0565b9150610b07836107d0565b9250828202610b15816107d0565b91508282048414831517610b2c57610b2b61097e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6d826107d0565b9150610b78836107d0565b925082610b8857610b87610b33565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb281610b93565b8114610bbd57600080fd5b50565b600081519050610bcf81610ba9565b92915050565b6000819050919050565b610be881610bd5565b8114610bf357600080fd5b50565b600081519050610c0581610bdf565b92915050565b600081519050610c1a816108a8565b92915050565b600080600080600060a08688031215610c3c57610c3b610740565b5b6000610c4a88828901610bc0565b9550506020610c5b88828901610bf6565b9450506040610c6c88828901610c0b565b9350506060610c7d88828901610c0b565b9250506080610c8e88828901610bc0565b9150509295509295909350565b6000610ca682610bd5565b9150610cb183610bd5565b9250828202610cbf81610bd5565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf757610cf661097e565b5b8282058414831517610d0c57610d0b61097e565b5b509291505056fea2646970667358221220f4514966c10a67dc4103ec58d48227746ec4b70df1cbe750d6cb0ff47d9dc06264736f6c63430008180033",
  "devdoc": {
    "author": "Manajit Halder",
    "details": "All functions are currently implemented without side effects.",
    "errors": {
      "FundMe__NotOwner()": [
        {
          "details": "This error is thorwn if withdraw function is called otherthan owner"
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "Function maintain funders list"
      },
      "withdraw()": {
        "details": "Withdraws fund from all funders and empty their fund"
      }
    },
    "title": "A contract for crown funding",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "FundMe__NotOwner()": [
        {
          "notice": "Checks to make sure that msg.sender is owner"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function receives fund from anyone"
      },
      "withdraw()": {
        "notice": "Withdraw fund only by owner"
      }
    },
    "notice": "This contract is to demo a sample crowd funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}